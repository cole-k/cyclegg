(
(data Bool (True False))
(:: True Bool)
(:: False Bool)

(data Int ())
(:: zero Int)
(:: plus (-> (Int Int) Int))
(axiom plus (?x ?y) (plus ?y ?x))
(axiom plus (?x (plus ?y ?z)) (plus (plus ?x ?y) ?z))
(axiom plus ((plus ?x ?y) ?z) (plus ?x (plus ?y ?z)))
(axiom plus (?x zero) ?x)

(data List (a) (Nil Cons))
(:: Nil  (List a))
(:: Cons (-> (a (List a)) (List a)))

(:: sum (-> ((List Int)) Int))
(let sum (Nil)      zero            )
(let sum ((Cons ?h ?t)) (plus ?h (sum ?t)))

(:: snoc (-> ((List Int) Int) (List Int)))
(let snoc (Nil ?h) (Cons ?h Nil))
(let snoc ((Cons ?h ?t) ?a) (Cons ?h (snoc ?t ?a)))

(:: rev (-> ((List Int)) (List Int)))
(let rev (Nil) Nil)
(let rev ((Cons ?h ?t)) (snoc (rev ?t) ?h))

(=== mts_optimize (xs) ((List Int))
  (sum xs) (sum (rev xs))
)

)